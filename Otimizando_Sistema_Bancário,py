def menu():
    return """
[d] Depositar
[s] Sacar
[e] Extrato
[nc] Nova conta
[lc] Listar contas
[nu] Novo usuário
[lu] Listar usuarios
[q] Sair
=> """


def depositar(saldo, valor, extrato):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"
        print("Depósito realizado com sucesso!")
    else:
        print("Operação falhou! O valor informado é inválido.")
    return saldo, extrato


def sacar(saldo, valor, extrato, limite_saque_max, numero_saques, qtd_limite_saques_dia):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite_saque_max
    excedeu_saques = numero_saques >= qtd_limite_saques_dia

    if excedeu_saldo:
        print("Operação falhou! Saldo insuficiente.")
    elif excedeu_limite:
        print(f"Operação falhou! Valor máximo permitido por saque é de: R$ {limite_saque_max}.")
    elif excedeu_saques:
        print("Operação falhou! Número máximo de saques diário excedido.")
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque: R$ {valor:.2f}\n"
        numero_saques += 1
        print("Saque realizado com sucesso!")
    else:
        print("Operação falhou! Valor inválido.")

    return saldo, extrato, numero_saques


def exibir_extrato(saldo, extrato):
    if not extrato:
        print("Não foram realizadas movimentações.")
    else:
        print(extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")

def criar_usuario(usuarios):
    cpf = input("Informe os números do CPF: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\nJá existe um usuário com esse CPF!")
        return

    nome = input("Informe seu nome completo: ")
    data_nascimento = input("Informe sua data de nascimento: ")
    endereco = input("Informe o seu endereço: ")
    usuarios.append({
        "nome": nome,
        "data_nascimento": data_nascimento,
        "cpf": cpf,
        "endereco": endereco
    })
    print("Usuário criado com sucesso!")

def filtrar_usuario(cpf, usuarios):
    for usuario in usuarios:
        if usuario['cpf'] == cpf:
            return usuario
    return None

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o seu CPF: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("Conta criada com sucesso!")
        return {
            "agencia": agencia,
            "numero_conta": numero_conta,
            "usuario": usuario
        }

    print("Usuário não encontrado, selecione novamente uma operação desejada.")
    return None

def listar_contas(contas):
    for conta in contas:
        print(f"Agência:\t{conta['agencia']}")
        print(f"C/C:\t\t{conta['numero_conta']}")
        print(f"Titular:\t{conta['usuario']['nome']}")
        print("=" * 100)

def listar_usuarios(usuarios):
    if not usuarios:
        print("Não existem usuários cadastrados.")
        return

    for usuario in usuarios:
        print(f"Nome:\t\t{usuario['nome']}")
        print(f"CPF:\t\t{usuario['cpf']}")
        print(f"Data de Nascimento:\t{usuario['data_nascimento']}")
        print(f"Endereço:\t{usuario['endereco']}")
        print("=" * 100)


def main():
    saldo = 0
    limite_saque_max = 500
    extrato = ""
    numero_saques = 0
    qtd_limite_saques_dia = 3
    usuarios = []
    contas = []
    AGENCIA = "0001"

    while True:
        opcao = input(menu())

        if opcao == "d":
            try:
                valor = float(input("Valor do depósito: "))
                saldo, extrato = depositar(saldo, valor, extrato)
            except ValueError:
                print("Operação falhou! O valor informado é inválido.")

        elif opcao == "s":
            try:
                valor = float(input("Informe o valor do saque: "))
                saldo, extrato, numero_saques = sacar(
                    saldo, valor, extrato, limite_saque_max, numero_saques, qtd_limite_saques_dia
                )
            except ValueError:
                print("Operação falhou! O valor informado é inválido.")

        elif opcao == "e":
            exibir_extrato(saldo, extrato)

        elif opcao == "q":
            print("Encerrando o sistema. Até logo!")
            break

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas(contas)

        elif opcao == "lu":
            listar_usuarios(usuarios)

        else:
            print("Operação inválida, selecione novamente uma operação desejada.")




if __name__ == "__main__":
    main()
